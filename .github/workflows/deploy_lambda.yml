name: Deploy Lambda function to AWS

on:
  push:
    branches:
      - main
    paths:
      - 'lambda/retrieve-entry/**'
      - 'lambda/create-entry/**'
      - '.github/workflows/deploy_lambda.yml'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-3
  LAMBDA_FUNCTION_NAME: ailumni-front-retrieve-entry

jobs:
  build-and-deploy-retrieve-entry:
    name: Build and Deploy Retrieve User Lambda
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies and build
        working-directory: ./lambda/retrieve-entry
        run: |
          npm ci
          npm run build

      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code --function-name ailumni-front-retrieve-entry --zip-file fileb://lambda/retrieve-entry/retrieve-entry.zip --region ${{ env.AWS_REGION }}

  build-and-deploy-create-entry:
    name: Build and Deploy Create Entry Lambda
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies and build
        working-directory: ./lambda/create-entry
        run: |
          npm ci
          npm run build

      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code --function-name ailumni-front-create-entry --zip-file fileb://lambda/create-entry/create-entry.zip --region ${{ env.AWS_REGION }}